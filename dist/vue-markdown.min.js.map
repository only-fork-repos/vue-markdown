{"version":3,"sources":["vue-markdown.js"],"names":["data","previewMode","previewHtml","buttons","title","type","icon","buttonCallbacks","header","vm","replaceSelection","selection","getSelection","setSelection","end","bold","italic","link","url","prompt","start","quote-left","code","list-ol","list-ul","image","VueMarkdown","marked","options","width","height","text","this","addButton","button","callback","push","install","Vue","component","props","template","methods","$$","textarea","selectionStart","selectionEnd","content","val","value","substring","length","focus","action","togglePreview","self","clientHeight","exports","module","define","amd","window"],"mappings":"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","file":"vue-markdown.min.js","sourcesContent":["/**\n * Vue Markdown 1.0.0\n * 2015/6/2 Peak Tai\n * https://github.com/PeakTai/vue-markdown.git\n */\n(function () {\n    \"user strict\"\n    var data = {\n        previewMode: false,\n        previewHtml: \"\"\n    }\n    data.buttons = [\n        {title: \"标题\", type: \"header\", icon: \"fa fa-header\"},\n        {title: \"加粗\", type: \"bold\", icon: \"fa fa-bold\"},\n        {title: \"斜体\", type: \"italic\", icon: \"fa fa-italic\"},\n        {title: \"超连接\", type: \"link\", icon: \"fa fa-link\"},\n        {title: \"引用\", type: \"quote-left\", icon: \"fa fa-quote-left\"},\n        {title: \"代码\", type: \"code\", icon: \"fa fa-code\"},\n        {title: \"有序列表\", type: \"list-ol\", icon: \"fa fa-list-ol\"},\n        {title: \"无序列表\", type: \"list-ul\", icon: \"fa fa-list-ul\"},\n        {title: \"网络图片\", type: \"image\", icon: \"fa fa-image\"}\n    ]\n    var buttonCallbacks = {\n        header: function (vm) {\n            vm.replaceSelection(\"### \")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end, selection.end)\n        },\n        bold: function (vm) {\n            vm.replaceSelection(\" ****\")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end - 2, selection.end - 2)\n        },\n        italic: function (vm) {\n            vm.replaceSelection(\" **\")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end - 1, selection.end - 1)\n        },\n        link: function (vm) {\n            var url = prompt(\"请输入链接地地址\")\n            if (!url) {\n                return\n            }\n            vm.replaceSelection(\"[链接描述](\" + url + \")\")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.start + 1, selection.start + 5)\n        },\n        \"quote-left\": function (vm) {\n            vm.replaceSelection(\" >\")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end, selection.end)\n        },\n        \"code\": function (vm) {\n            vm.replaceSelection(\"``````\")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end - 3, selection.end - 3)\n        },\n        \"list-ol\": function (vm) {\n            vm.replaceSelection(\"1. \")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end, selection.end)\n        },\n        \"list-ul\": function (vm) {\n            vm.replaceSelection(\"* \")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.end, selection.end)\n        },\n        \"image\": function (vm) {\n            var url = prompt(\"请输入图片的地址\")\n            if (!url) {\n                return\n            }\n            vm.replaceSelection(\"![图片说明](\" + url + \")\")\n            var selection = vm.getSelection()\n            vm.setSelection(selection.start + 2, selection.start + 6)\n\n        }\n    }\n    var VueMarkdown = function (marked, options) {\n        options = options || {}\n        data.width = options.width || \"100%\"\n        data.height = options.height || \"300px\"\n        data.text = options.text || \"# Vue Markdown Editor\"\n\n        /**\n         * add a button\n         * @param button {title,String,type:String,icon:String,callback:Function}\n         */\n        this.addButton = function (button) {\n            if (!button.type) {\n                throw \"button must has a 'type' property\"\n            }\n            if (buttonCallbacks[button.type]) {\n                throw \"the type of button is already in use\"\n            }\n            buttonCallbacks[button.type] = button.callback\n            delete button.callback\n            data.buttons.push(button)\n        }\n\n        //Vue.use(instance)\n        this.install = function (Vue) {\n            Vue.component(\"md-editor\", {\n                props: [\"width\", \"height\", \"text\"],\n                template: \"<style>\\n    .md-editor {\\n        padding: 40px 10px 10px 10px;\\n        position: relative;\\n        border: 1px solid #ddd;\\n        border-radius: 4px;\\n        -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, .05);\\n        box-shadow: 0 1px 1px rgba(0, 0, 0, .05);\\n    }\\n\\n    .md-editor textarea {\\n        border: none;\\n        resize: vertical;\\n        outline: none;\\n        padding: 0;\\n    }\\n\\n    .md-editor textarea {\\n        width: 100%;\\n    }\\n\\n    .md-editor .md-preview {\\n        overflow-y: auto;\\n    }\\n\\n    .md-editor .md-toolbar {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 32px;\\n        border-bottom: 1px solid #ddd;\\n        overflow-x: auto;\\n    }\\n\\n    .md-toolbar .button {\\n        line-height: 32px;\\n        width: 32px;\\n        text-align: center;\\n        cursor: pointer;\\n    }\\n</style>\\n<div class=\\\"md-editor\\\" v-style=\\\"width:width\\\">\\n    <div class=\\\"md-toolbar\\\">\\n        <span class=\\\"button {{icon}}\\\" v-repeat=\\\"buttons\\\" title=\\\"{{title}}\\\" v-on=\\\"click:action(type)\\\"></span>\\n        <span class=\\\"button fa\\\" v-class=\\\"'fa-eye':previewMode,'fa-eye-slash':!previewMode\\\"\\n              v-on=\\\"click:togglePreview\\\"></span>\\n    </div>\\n    <textarea v-model=\\\"text\\\" v-el=\\\"textarea\\\" v-show=\\\"!previewMode\\\" v-style=\\\"height:height\\\"></textarea>\\n\\n    <div class=\\\"md-preview\\\" v-show=\\\"previewMode\\\" v-style=\\\"height:height\\\">{{{previewHtml}}}</div>\\n</div>\\n<content></content>\",\n                data: function () {\n                    return data\n                },\n                methods: {\n                    getSelection: function () {\n                        return {\n                            start: this.$$.textarea.selectionStart,\n                            end: this.$$.textarea.selectionEnd\n                        }\n                    },\n                    setSelection: function (start, end) {\n                        this.$$.textarea.selectionStart = start\n                        this.$$.textarea.selectionEnd = end\n                    },\n                    replaceSelection: function (content) {\n                        var selection = this.getSelection()\n                        val = this.$$.textarea.value\n                        var val = this.text.substring(0, selection.start) + content + this.text.substring(selection.end)\n                        this.$$.textarea.value = this.text = val\n                        this.setSelection(selection.start, selection.start + content.length)\n                        this.$$.textarea.focus()\n                    },\n                    //trigger by click button\n                    action: function (type) {\n                        if (this.previewMode) {\n                            return\n                        }\n                        var callback = buttonCallbacks[type]\n                        if (callback) {\n                            callback(this)\n                        }\n                    },\n                    togglePreview: function () {\n                        var self = this\n                        if (this.previewMode) {\n                            this.previewMode = false\n                            return\n                        }\n                        self.previewHtml = marked(self.text)\n                        self.height = self.$$.textarea.clientHeight\n                        this.previewMode = true\n                    }\n                }\n            })\n        }\n    }\n    if (typeof exports == \"object\") {\n        module.exports = VueMarkdown;\n    } else if (typeof define == \"function\" && define.amd) {\n        define([], function () {\n            return VueMarkdown\n        })\n    } else if (window) {\n        window.VueMarkdown = VueMarkdown\n    }\n})()"],"sourceRoot":"/source/"}